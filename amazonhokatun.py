# Задание 1:
    # Нужно создать обычный калькулятор состоящий из знаков +,-,*,/
    # 1. У пользователя просят выбрать знак
    # 2. Просят ввести 1 число
    # 3. Просят ввести 2 число
    # 4. Вывести результат
    # 5. После результата спросить у пользователя хочет он закончить или нет, если нет то калькулятор должен запускатся сначала
    # 6. Учесть то что деление на ноль невозможно

# print("Добро пожаловать в наш терминаторовычеслительный калькулятор!")
# while True:
#     what = input ('Что делаем? (+,-,*,/)')
#     if what == '0':
#         break
#     if what not in ('+',"-",'*','/'):
#         continue
#     a = float(input ("Введите первое число: "))
#     b = float(input ("Введите второе число: "))
#     if what == "+":
#         print('Результат: ')
#         print(a + b)
#         input('Для завершения калькулятора напишите 0 ПОСЛЕ данного инпута!')
#     elif what == "-":
#         print('Результат: ')
#         print(a - b)
#         input('Для завершения калькулятора напишите 0 ПОСЛЕ данного инпута!')
#     elif what == '*':
#         print('Результат: ')
#         print(a * b)
#         input('Для завершения калькулятора напишите 0 ПОСЛЕ данного инпута!')
#     elif what == "/":
#         if b != 0:
#             print('Результат: ')
#             print(a / b)
#             input('Для завершения калькулятора напишите 0 ПОСЛЕ данного инпута!')
#         else:
#             print("На ноль делить нельзя!") 
#             input('Для завершения калькулятора напишите 0 ПОСЛЕ данного инпута!')   
#     else:
#         print("Неверная операция!")   
#         input('Для завершения калькулятора напишите 0 ПОСЛЕ данного инпута!')



################################################################################

# Задание 2:
    # Даны три переменные "A", "B" и "C". 
    # Изменить значения этих переменных так, чтобы в "A" хранилось значение "A"+"B", 
    # в "B" хранилась разность старых значений "C" - "A", 
    # а в "C" хранилось сумма старых значений "A" + "B" + "C". 
    # Например, A=0, B=2, C=5, тогда новые значения A=2, B=5 и C=7.
#старые значения
# a1 = 0
# b1 = 2
# c1 = 5
#новые значения
# a2 = 2
# b2= 5
# c2 = 7
# A = (a1 + b1)
# B = (c2 - a2)
# C = (a2 + b2 + c2)
# print(A)
# print(B)
# print(C)


################################################################################

 #Задание 3:
    # Пользователь вводит сторону квадрата. Найдите периметр и площадь квадрата.
# a = int(input("введите любую сторну для квадрата : "))
# s = a*a
# p = 4*a
# print("площадь: ", s)
# print("периметр: ", p)



################################################################################



# Задание 4:
    # Вам даны несколько последовательностей чисел:
# sequence_0 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
# sequence_1 = (14,10,35,45,'60',70,90,0,105,150,'70')
# sequence_2 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0.0)
# sequence_3 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70')
# my_set1 = set(sequence_0)
# my_set2 = set(sequence_1)
# my_set3 = set(sequence_2)
# my_set4 = set(sequence_3)
# for i in my_set1:
#     if sequence_0 != my_set1:
#         print("Последовательность не уникальна")
#         break
#     else:
#         print("Последовательность уникальна")
#         break
# for i in  my_set2:
#     if sequence_1 == my_set2:
#         print("Последовательность не уникальна")
#         break
#     else:
#         print("последовательность  уникальна")
#         break
# for i in my_set3:
#     if sequence_2 != my_set3:
#         print("последовательность не уникальна")
#         break
#     else:
#         print("последовательность уникальна")
#         break
# for i in my_set4:
#     if sequence_3 != my_set4:
#         print("последовательность не уникальна ")
#         break
#     else:
#         print("последовательность уникальна")
#         break


    # Нужно проверить, все ли числа в КАЖДОЙ последовательности уникальны.
    # Если в последовательности были найдены дубликаты ---> Выведите на экран: "Последовательность не уникальна."
    # Если в последовательности дубликатов найдено не было ---> Выведите на экран: "Последовательность уникальна."
    # Если в решении задания не присутствует цикл ---> Задание не защитано.




################################################################################



# Задание 5:
    # Создайте input и спросите у пользоваетля как работает встроенная функция reversed().
    # В терминале пользователя должен ввести пример функции reversed() и отправить это вашей программе.
    # Ваша программа должна исполнить ту часть кода которую ввёл пользователь и вывести на экран результат.
    # Если пользователь ввёл что-то не по синтаксису Python поймайте это с помощью try: except:
    # Если пользователь всё ввёл верно выполните его программу.
    # Если поймали ошибку ---> Спросите снова как работает встроенная функция reversed().


# import sys
# s = input('Пользователь, как ты думаешь что такое встроенная функция reversed()? Напиши пример :')
# print(''.join(reversed(s)))

################################################################################



# Задание 6:
#     Дано четырехзначное число. Верно ли, что цифры в нем расположены по убыванию? 
#     Например, 4311 - нет, 4321 - да, 5542 - нет, 5631 - нет, 9871 - да.

# a = '4311'
# b = a[0]
# c = a[1]
# d = a[2]
# f = a[3]
# if b > c and d > f:
#     print("да по убыванию")
# else:
#     print("нет")

# abc = '4321'
# b = abc[0]
# c = abc[1]
# d = abc[2]
# f = abc[3]
# if b > c and d > f:
#     print("да по убыванию")
# else:
#     print("нет")

# ghj = '5631'
# b = ghj[0]
# c = ghj[1]
# d = ghj[2]
# f = ghj[3]
# if b > c and d > f:
#         print("да по убыванию")
# else:
#     print("нет")

# jkl = '9871'
# b = jkl[0]
# c = jkl[1]
# d = jkl[2]
# f = jkl[3]
# if b > c and d > f:
#         print("да по убыванию")
# else:
#     print("нет")



#################################################################################